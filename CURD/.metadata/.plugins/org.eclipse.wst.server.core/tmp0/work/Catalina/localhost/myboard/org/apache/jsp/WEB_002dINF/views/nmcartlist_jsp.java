/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.50
 * Generated at: 2021-08-31 05:15:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.mvc.myboard.cart.cartDto;
import java.util.List;
import java.util.ArrayList;

public final class nmcartlist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1627271442480L));
    _jspx_dependants.put("jar:file:/C:/Workspace/CURD/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/myboard/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.mvc.myboard.cart.cartDto");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(".show.on {\r\n");
      out.write("	display: none;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function(){\r\n");
      out.write("	$(\"#mulorder\").submit(function(){\r\n");
      out.write("		if($(\"#mulorder input:checked\").length == 0){\r\n");
      out.write("			alert(\"체크하고 눌러주세요\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("	});\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("function allCheck(bool){\r\n");
      out.write("	var chks = document.getElementsByName(\"chk\");\r\n");
      out.write("	for (var i = 0; i < chks.length; i++){\r\n");
      out.write("		chks[i].checked = bool;\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("$(function(){\r\n");
      out.write("	$(\".chk\").click(function(){\r\n");
      out.write("		var all = $(\"input:checkbox[name=chk]\").length;\r\n");
      out.write("		var chk = $(\"input:checkbox[name=chk]:checked\").length;\r\n");
      out.write("		console.log(\"all : \" + all)\r\n");
      out.write("		console.log(\"chk : \" + chk)\r\n");
      out.write("		if(all == chk){\r\n");
      out.write("			$(\"input:checkbox[name=all]\").prop(\"checked\", true);\r\n");
      out.write("		} else {\r\n");
      out.write("			$(\"input:checkbox[name=all]\").prop(\"checked\", false);\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("	})\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("function delete(index){\r\n");
      out.write("	\r\n");
      out.write("	$(\".show\").eq(index).addClass(\"on\");\r\n");
      out.write("	\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");

	List<cartDto> list = (ArrayList) session.getAttribute("nclist");
	System.out.println(list);

      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("		<h1>장바구니</h1>\r\n");
      out.write("	<form action=\"mulorder.do\" method=\"post\" id=\"mulorder\">\r\n");
      out.write("	<table border=\"1\">\r\n");
      out.write("		<col width=\"50\">\r\n");
      out.write("		<col width=\"100\">\r\n");
      out.write("		<col width=\"100\">\r\n");
      out.write("		<col width=\"100\">\r\n");
      out.write("		<col width=\"120\">\r\n");
      out.write("		<col width=\"50\">\r\n");
      out.write("		<col width=\"50\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th><input type=\"checkbox\" name=\"all\" onclick=\"allCheck(this.checked);\"></th>\r\n");
      out.write("			<th>상품사진</th>\r\n");
      out.write("			<th>상품명</th>\r\n");
      out.write("			<th>대분류</th>\r\n");
      out.write("			<th>소분류</th>\r\n");
      out.write("			<th>수량</th>\r\n");
      out.write("			<th>취소</th>\r\n");
      out.write("		</tr>\r\n");
      out.write("		");
 
			if(list.size() == 0){
		
      out.write("\r\n");
      out.write("				<tr>\r\n");
      out.write("					<th colspan=\"4\">--------장바구니에 담은 상품이 없습니다-----------</th>\r\n");
      out.write("				</tr>\r\n");
      out.write("		");

			} else {
				for(cartDto dto : list){
					
		
      out.write("\r\n");
      out.write("					<tr class=\"show\">\r\n");
      out.write("						<th class=\"check\">\r\n");
      out.write("							<input type=\"checkbox\" class=\"chk\" name=\"chk\" value=\"");
      out.print(dto.getProno());
      out.write("\">\r\n");
      out.write("							\r\n");
      out.write("						</th>\r\n");
      out.write("						<td class=\"img\">\r\n");
      out.write("							<img src=\"image/upload/");
      out.print(dto.getProname());
      out.write('/');
      out.print(dto.getProtitle());
      out.write("\" width=\"140\" height=\"80\">\r\n");
      out.write("						</td>\r\n");
      out.write("						<td class=\"title\">");
      out.print(dto.getProtitle());
      out.write("</td>\r\n");
      out.write("						<td class=\"kate1\">");
      out.print(dto.getProkate_1());
      out.write("</td>\r\n");
      out.write("						<td class=\"kate2\">");
      out.print(dto.getProkate_2());
      out.write("</td>\r\n");
      out.write("						<td class=\"amount\">");
      out.print(dto.getAmount());
      out.write("</td>\r\n");
      out.write("						<td class=\"delete\"><input type=\"button\" value=\"장바구니 삭제\"\r\n");
      out.write("							onclick=\"location.href='nmdelete.do?prono=");
      out.print(dto.getProno());
      out.write("'\">\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("			");


				}
			}
			
      out.write("\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td colspan=\"7\" align=\"right\">\r\n");
      out.write("				<input type=\"button\" value=\"구매리스트\" onclick=\"location.href='dellist.do'\">\r\n");
      out.write("				<input type=\"button\" value=\"상품보러가기\" onclick=\"location.href='prolist.do'\">\r\n");
      out.write("				<input type=\"submit\" value=\"체크한 목록 주문하기\">\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("	</form>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.50
 * Generated at: 2021-08-24 08:25:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class ordhistory_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("	function namesearch(){\r\n");
      out.write("		var footer = $(\".footer\")\r\n");
      out.write("		var username = $(\"#name\").val().trim();\r\n");
      out.write("		console.log(username)\r\n");
      out.write("		if(username == null || username == \"\"){\r\n");
      out.write("			alert(\"이름을 적고 검색을 눌러주세요\")\r\n");
      out.write("		} else {\r\n");
      out.write("			$.ajax({\r\n");
      out.write("					type : \"post\",\r\n");
      out.write("					url : \"ordhisname.do?username=\",\r\n");
      out.write("					data : username,\r\n");
      out.write("					contentType : \"application/json; charset=UTF-8\",\r\n");
      out.write("					dataType : \"json\",\r\n");
      out.write("					success : function(json){\r\n");
      out.write("						$(\".list\").children().remove();\r\n");
      out.write("						console.log(json[0].ordhisno)\r\n");
      out.write("						if(json.length == 0){\r\n");
      out.write("							var list = $(\"<tr>\")\r\n");
      out.write("							list.addClass(\"list\");\r\n");
      out.write("							list.append(\"<th colspan='5'>--------검색된 내용이 없습니다-----------</th>\")\r\n");
      out.write("							footer.before(list);\r\n");
      out.write("						} else {\r\n");
      out.write("							for(var i = 0; i < json.length; i++){\r\n");
      out.write("								var list = $(\"<tr>\")\r\n");
      out.write("								list.addClass(\"list\")\r\n");
      out.write("								list.append(\"<td>\"+ json[i].ordhisno +\"</td>\");\r\n");
      out.write("								list.append(\"<td>\"+ json[i].delno +\"</td>\");\r\n");
      out.write("								list.append(\"<td>\"+ json[i].username +\"</td>\");\r\n");
      out.write("								list.append(\"<td>\"+ json[i].reason +\"</td>\");\r\n");
      out.write("								list.append(\"<td>\"+ json[i].ordhisdate +\"</td>\");\r\n");
      out.write("								\r\n");
      out.write("								footer.before(list);\r\n");
      out.write("							}\r\n");
      out.write("						}\r\n");
      out.write("						\r\n");
      out.write("					}, error: function(){\r\n");
      out.write("						alert(\"통신실패\");\r\n");
      out.write("					}\r\n");
      out.write("			});\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	\r\n");
      out.write("	<div>\r\n");
      out.write("		<div>\r\n");
      out.write("			<div>\r\n");
      out.write("				<input type=\"text\" size=\"30\" id=\"name\" placeholder=\"검색할 유저 이름을 쳐주세요\">\r\n");
      out.write("				<input type=\"button\" value=\"검색\" onclick=\"namesearch();\">\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	<table border=\"1\">\r\n");
      out.write("		<col width=\"50\">\r\n");
      out.write("		<col width=\"120\">\r\n");
      out.write("		<col width=\"100\">\r\n");
      out.write("		<col width=\"500\">\r\n");
      out.write("		<col width=\"150\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>번호</th>\r\n");
      out.write("			<th>주문번호</th>\r\n");
      out.write("			<th>주문자</th>\r\n");
      out.write("			<th>내용</th>\r\n");
      out.write("			<th>주문일</th>\r\n");
      out.write("		</tr>\r\n");
      out.write("		\r\n");
      out.write("		<tr class=\"list\">\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr class=\"footer\">\r\n");
      out.write("			<td>\r\n");
      out.write("				<input type=\"button\" value=\"관리자페이지\" onclick=\"location.href='admin.do'\">\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.41
 * Generated at: 2021-06-15 01:11:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import com.login.dto.MYMemberDto;
import com.login.biz.MYMemberBiz;

public final class logincontroller_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.login.biz.MYMemberBiz");
    _jspx_imports_classes.add("com.login.dto.MYMemberDto");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	request.setCharacterEncoding("UTF-8");
	response.setContentType("text/html; charset=UTF-8");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	String command = request.getParameter("command");
	System.out.println("[" + command + "]");
	
	MYMemberBiz biz = new MYMemberBiz();
	
	if(command.equals("login")){
		String myid = request.getParameter("myid");
		String mypw = request.getParameter("mypw");
		
		MYMemberDto dto = biz.login(myid, mypw);
		
		if (dto != null){
			
			// 로그인 할땐 주로 session에 담는다.
			// sesstion scope에 객체 담기
			session.setAttribute("dto", dto);
			// 만료되는 시간 설정 (default: 30분)
			session.setMaxInactiveInterval(10 * 60);
			
			if(dto.getMyrole().equals("ADMIN")){
				response.sendRedirect("adminmain.jsp");
			} else if (dto.getMyrole().equals("USER")){
				response.sendRedirect("usermain.jsp");
			}
			
		} else {
			

      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\talert(\"로그인 실패\");\r\n");
      out.write("\t\tlocation.href=\"index.html\";\r\n");
      out.write("\t</script>\r\n");

		}

		

	}else if(command.equals("logout")){ // session 에 값을 담아놨는데 로그아웃하면 
		// sesssion scope에서 값 삭제 (만료)
		session.invalidate();
		response.sendRedirect("index.html");
		
	}else if(command.equals("listall")){
		//1.
		
		//2.
		List<MYMemberDto> list = biz.selectAllUser();
		
		//3.
		request.setAttribute("list", list);
		
		//4.
		pageContext.forward("userlistall.jsp");
	}else if(command.equals("listen")){
		
		//1.
		
		//2.
		List<MYMemberDto> list = biz.selectEnabledUser();
		
		//3.
		request.setAttribute("list", list);
		
		//4.
		pageContext.forward("userlisten.jsp");
	} else if (command.equals("updateroleform")){
		//1.
		int myno = Integer.parseInt(request.getParameter("myno"));
		
		//2. 
		MYMemberDto dto = biz.selectUser(myno);
		
		//3.
		request.setAttribute("dto", dto);
		
		//4.
		pageContext.forward("updaterole.jsp");
		
	} else if (command.equals("updaterole")){
		// 1.
		int myno = Integer.parseInt(request.getParameter("myno"));
		String myrole = request.getParameter("myrole");
		// 2.
		int res = biz.updateRole(myno, myrole);
		// 3.
		
		// 4.
		if(res > 0) {

      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\talert(\"등급 변경 성공\");\r\n");
      out.write("\t\tlocation.href=\"logincontroller.jsp?command=listen\";\r\n");
      out.write("\t</script>\r\n");

		}else{

      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t \talert(\"등급 변경 실패\");\r\n");
      out.write("\t \tlocation.href=\"logincontroller.jsp?command=updateroleform&myno=");
      out.print(myno);
      out.write("\";\r\n");
      out.write("\t</script>\r\n");

		}	
	}else if (command.equals("registform")){
		response.sendRedirect("regist.jsp");
		
	}else if (command.equals("idchk")){
		// 1.
		String myid = request.getParameter("myid");
		
		// 2.
		MYMemberDto dto = biz.idCheck(myid);
		boolean idnotused = true;
		
		if(dto.getMyid() != null){
			idnotused = false;
		}
		
		response.sendRedirect("idchk.jsp?idnotused="+idnotused);
	}else if (command.equals("usersel")){
		int myno = Integer.parseInt(request.getParameter("myno"));
		
		MYMemberDto dto = biz.selectUser(myno);
		
		request.setAttribute("dto", dto);
		
		pageContext.forward("userselect.jsp");
	} else if (command.equals("usermain")){
		
		response.sendRedirect("usermain.jsp");
		
	} else if (command.equals("adminmain")){
		
		response.sendRedirect("adminmain.jsp");
	
	} else if (command.equals("userup")){
		int myno = Integer.parseInt(request.getParameter("myno"));
		
		MYMemberDto dto = biz.selectUser(myno);
		
		request.setAttribute("dto", dto);
		
		pageContext.forward("userupdate.jsp");
	
	} else if (command.equals("userupres")){
		
		
		String mypw = request.getParameter("mypw");
		String myname = request.getParameter("myname");
		String myaddr = request.getParameter("myaddr");
		String myphone = request.getParameter("myphone");
		String myemail = request.getParameter("myemail");
		int myno = Integer.parseInt(request.getParameter("myno"));
		
		MYMemberDto dto = new MYMemberDto();
		dto.setMyno(myno);
		dto.setMypw(mypw);
		dto.setMyname(myname);
		dto.setMyaddr(myaddr);
		dto.setMyphone(myphone);
		dto.setMyemail(myemail);
		int res = biz.updateUser(dto);
		
		if(res > 0){

      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\talert(\"수정 성공\");\r\n");
      out.write("\t\tlocation.href=\"logincontroller.jsp?command=usersel&myno=");
      out.print(myno);
      out.write("\";\r\n");
      out.write("\t</script>\r\n");
			
		} else {

      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\talert(\"수정 실패\");\r\n");
      out.write("\t\thistory.back();\r\n");
      out.write("\t</script>\r\n");

		}

      out.write('\r');
      out.write('\n');

	} else if (command.equals("userdel")){
		int myno = Integer.parseInt(request.getParameter("myno"));
		
		int res = biz.deleteUser(myno);
		
		if (res > 0){

      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\talert(\"삭제 성공\");\r\n");
      out.write("\t\tlocation.href=\"logincontroller.jsp?command=index\";\r\n");
      out.write("\t</script>\r\n");
			
		}else{

      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\talert(\"삭제 실패\");\r\n");
      out.write("\t\tlocation.href=\"logincontroller.jsp?command=usersel&myno=");
      out.print(myno);
      out.write("\";\r\n");
      out.write("\t</script>\r\n");
	
		}
	}else if (command.equals("index")){
		response.sendRedirect("index.html");
		
	}else if (command.equals("insertuser")){
		String myid = request.getParameter("myid");
		String mypw = request.getParameter("mypw");
		String myname = request.getParameter("myname");
		String myaddr = request.getParameter("myaddr");
		String myphone = request.getParameter("myphone");
		String myemail = request.getParameter("myemail");
		
		MYMemberDto dto = new MYMemberDto(0, myid, mypw, myname, myaddr, myphone, myemail, null, null);
		int res = biz.inserUser(dto);
		
		if(res > 0){

      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\talert(\"가입 성공!\");\r\n");
      out.write("\t\tlocation.href=\"logincontroller.jsp?command=index\";\r\n");
      out.write("\t</script>\t\r\n");
 	
		}else{

      out.write("\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\talert(\"가입 실패!\");\r\n");
      out.write("\t\thistory.back();\r\n");
      out.write("\t</script>\r\n");

		}
	}
		
		

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<h1 style=\"color: red;\">잘못왔다...</h1>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

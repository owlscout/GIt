/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.41
 * Generated at: 2021-06-16 04:28:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class joinForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	request.setCharacterEncoding("UTF-8");
	response.setContentType("text/html; charset=UTF-8");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<table>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t\t\t<div class=\"d-flex justify-content-end\">\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn btn-info\" onClick=\"goPopup();\">주소검색</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!-- 1. 전체 주소 2. 우편번호 3.도로명주소 4.건물명 5. 나머지 주소 -->\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"address\" id=\"address\" class=\"form-control\" placeholder=\"도로명 주소를 입력해 주세요\" required readonly />\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"zipNo\" id=\"zipNo\" class=\"form-control\" placeholder=\"우편 번호\" required readonly><br/>\r\n");
      out.write("\t\t\t\t<input style=\"width: 300px;\" type=\"text\" name=\"addr\" id=\"addr\" class=\"form-control\" placeholder=\"도로명 주소를 입력해 주세요\" required readonly />\r\n");
      out.write("\t\t\t\t<input  type=\"text\" name=\"addr2\" id=\"addr2\" class=\"form-control\" placeholder=\"참고 주소\" required readonly /><br/>\r\n");
      out.write("\t\t\t\t<input type=\"text\" name=\"addrDetail\" id=\"addrDetail\" class=\"form-control\" placeholder=\"나머지 주소를 입력해 주세요\"/>\r\n");
      out.write("\t\t\t\t<input style=\"width: 300px;\" type=\"text\" name=\"address\" id=\"address\" class=\"form-control\" readonly=\"readonly\" onclick=\"goPopup();\" >\r\n");
      out.write("\t\t\t<td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\r\n");
      out.write("\tfunction goPopup() {\r\n");
      out.write("\t\t// 주소검색을 수행할 팝업 페이지를 호출합니다.\r\n");
      out.write("\t\t// 호출된 페이지(jusopopup.jsp)에서 실제 주소검색URL(https://www.juso.go.kr/addrlink/addrLinkUrl.do)를 호출하게 됩니다.\r\n");
      out.write("\t\t// scrollbars=yes 스크롤 바 가능 resizable=yes 팝업창 크기 조절 가능 \r\n");
      out.write("\t\tvar pop = window.open(\"signup/jusoPopup.jsp\", \"pop\",\r\n");
      out.write("\t\t\t\t\"width=570,height=420, scrollbars=yes, resizable=yes\");\r\n");
      out.write("\t}\r\n");
      out.write("\t// 값 불러와서 id가 address...등에 각 값에 넣고 나머지 주소가 30글자보다 크면 너무길다고 리턴\r\n");
      out.write("\tvar jusoCallBack = function(roadFullAddr,roadAddrPart1,addrDetail,roadAddrPart2,engAddr, jibunAddr, zipNo){ \r\n");
      out.write("\t\tdocument.getElementById(\"address\").value = roadFullAddr; \r\n");
      out.write("\t\tdocument.getElementById(\"zipNo\").value = zipNo; \r\n");
      out.write("\t\tdocument.getElementById(\"addr\").value = roadAddrPart1; \r\n");
      out.write("\t\tdocument.getElementById(\"addr2\").value = roadAddrPart2;\r\n");
      out.write("\t\troadAddrPart1 += roadAddrPart2;\r\n");
      out.write("\t\tif(addrDetail.length>30){ \r\n");
      out.write("\t\t\talert('나머지 주소가 너무 길어 다시 입력해야 합니다.'); \r\n");
      out.write("\t\t\treturn; \r\n");
      out.write("\t\t} \r\n");
      out.write("\t\tdocument.getElementById(\"addrDetail\").value = addrDetail; \r\n");
      out.write("\t}\r\n");
      out.write("\t</script>\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
